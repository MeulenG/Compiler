#include "../Lexer/Lexer.h" // Libraries


using namespace std; // Namespace

// -------------------------------------------------------------- Ast ------------------------------------------------------------------






// -------------------------------------------------------------- CodeGen --------------------------------------------------------------



// -------------------------------------------------------------- Compiler -------------------------------------------------------------




// --------------------------------------------------------------- Lexer ---------------------------------------------------------------













// -------------------------------------------------------------- Parser --------------------------------------------------------------
// if (current_token != '(') // Simple Variable ref.
// {
// 	return make_unique<VariableExpression>(identifier_Name);
// }
// 
// // Call
// getNextToken(); // Eat '('
// vector<unique_ptr<Expression>> Args;
// if (current_token != ')') // Parse arguments
// {
// 	while (true)
// 	{
// 		auto Args = ParseExpression();
// 		if (auto Args = ParseExpression())
// 		{
// 			Args.push_back(move(Args));
// 		}
// 
// 		if (current_token == ')')
// 		{
// 			break;
// 		}
// 		if (current_token != ',')
// 		{
// 			cout << "Expected a    :    ','  or ')'  " << endl;
// 		}
// 		// Eat ','
// 		getNextToken();
// 	}
// }
// // Eat ')'
// getNextToken();
// 
// return make_unique<CallExpression>(identifier_Name, move(Args));
// }


// -------------------------------------------------------------- TypeChecker --------------------------------------------------------------






// -------------------------------------------------------------- Main ---------------------------------------------------------------------